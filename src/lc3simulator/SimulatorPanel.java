/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package lc3simulator;

import java.awt.Rectangle;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.ListSelectionModel;

/**
 *
 * @author anoop
 */
public class SimulatorPanel extends javax.swing.JPanel {
	
	private LC3 lc3;

	/**
	 * Creates new form SimFrame
	 */
	public SimulatorPanel() {
		lc3 = new LC3();
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registersLabel = new javax.swing.JLabel();
        registerTableScrollPane = new javax.swing.JScrollPane();
        registerTable = new javax.swing.JTable();
        memoryLabel = new javax.swing.JLabel();
        memoryTableScrollPane = new javax.swing.JScrollPane();
        memoryTable = new javax.swing.JTable();
        instructionCycleButton = new javax.swing.JButton();
        jumpLabel = new javax.swing.JLabel();
        jumpField = new javax.swing.JTextField();
        loadButton = new javax.swing.JButton();

        registersLabel.setText("Registers");

        registerTable.setModel(new RegisterTableModel(lc3));
        registerTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        registerTableScrollPane.setViewportView(registerTable);

        memoryLabel.setText("Memory");

        memoryTable.setModel(new MemoryTableModel(lc3));
        memoryTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        memoryTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        memoryTable.getColumnModel().getColumn(1).setPreferredWidth(70);
        memoryTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        memoryTable.getColumnModel().getColumn(3).setPreferredWidth(70);
        memoryTableScrollPane.setViewportView(memoryTable);

        instructionCycleButton.setText("Instruction Cycle");
        instructionCycleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionCycleButtonActionPerformed(evt);
            }
        });

        jumpLabel.setText("Jump to:");

        jumpField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpFieldActionPerformed(evt);
            }
        });

        loadButton.setText("Load Program");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(instructionCycleButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(loadButton)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(registerTableScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .add(registersLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(jumpLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jumpField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(memoryTableScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                            .add(memoryLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(registersLabel)
                    .add(memoryLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(memoryTableScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .add(registerTableScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jumpLabel)
                    .add(jumpField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(instructionCycleButton)
                    .add(loadButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void instructionCycleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructionCycleButtonActionPerformed
        lc3.instructionCycle();
		registerTable.repaint();
		memoryTable.repaint();
    }//GEN-LAST:event_instructionCycleButtonActionPerformed

    private void jumpFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpFieldActionPerformed
        String in = jumpField.getText();
		int address;
		try {
			if (!in.isEmpty() && in.charAt(0) != 'x')
				address = Integer.parseInt(in, 16);
			else
				address = Integer.parseInt(in.substring(1), 16);
			System.out.println("x" + Integer.toHexString(address));
			memoryTable.getSelectionModel().setSelectionInterval(address, address);
			memoryTable.scrollRectToVisible(new Rectangle(memoryTable.getCellRect(address, 0, true)));
		} catch (NumberFormatException nfe) {
			
		}
    }//GEN-LAST:event_jumpFieldActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
		JFileChooser fc = new JFileChooser();
		if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
			File file = fc.getSelectedFile();
			DataInputStream in = null;
			try {
				in = new DataInputStream(new BufferedInputStream(new FileInputStream(file)));
			} catch (FileNotFoundException ex) {
				return;
			}
			try {
				short addr = in.readShort();
				while (true) {
					lc3.setMem(addr, in.readShort());
					addr++;
				}
			} catch (EOFException ex) {
				
			} catch (IOException ex) {
				
			}
		}
    }//GEN-LAST:event_loadButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton instructionCycleButton;
    private javax.swing.JTextField jumpField;
    private javax.swing.JLabel jumpLabel;
    private javax.swing.JButton loadButton;
    private javax.swing.JLabel memoryLabel;
    private javax.swing.JTable memoryTable;
    private javax.swing.JScrollPane memoryTableScrollPane;
    private javax.swing.JTable registerTable;
    private javax.swing.JScrollPane registerTableScrollPane;
    private javax.swing.JLabel registersLabel;
    // End of variables declaration//GEN-END:variables
}
